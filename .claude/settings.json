{
  "permissions": {
    "deny": [
      "Bash(git push --force)",
      "Bash(git push -f)",
      "Bash(git commit --amend)",
      "Bash(git rebase -i:*)",
      "Bash(git reset --hard:*)",
      "Bash(gh pr create:*)",
      "Bash(gh pr view:*)",
      "Bash(gh pr comment:*)",
      "Bash(gh api:*)",
      "Bash(grep -r:*)",
      "Bash(find:*)",
      "Bash(rg:*)",
      "Bash(tail -f:*)",
      "Bash(sqlite3:*)",
      "Bash(npx prisma studio:*)",
      "Read(./.env)",
      "Read(./.env.*)",
      "Read(./secrets/**)",
      "Bash(rm -rf:*)",
      "Bash(curl:*)",
      "Bash(wget:*)"
    ],

    "allow": [
      "Bash(npm run test:*)",
      "Bash(npm run lint:*)",
      "Bash(npm run typecheck:*)",
      "Bash(npm run build:*)",
      "Bash(npm start:*)",
      "Bash(npm run dev:*)",
      "Bash(git status:*)",
      "Bash(git diff:*)",
      "Bash(git log:*)",
      "Bash(git checkout main)",
      "Bash(git checkout -b feature/*)",
      "Bash(git add:*)",
      "Bash(git commit -m:*)",
      "Bash(git push origin feature/*)",
      "Bash(git pull origin main)",
      "Read(./src/**)",
      "Read(./scripts/**)",
      "Read(./docs/**)",
      "Read(./context/**)",
      "Read(./*.md)",
      "Read(./*.json)",
      "Read(./*.ts)",
      "Read(./*.js)",
      "Bash(npx tsx scripts/mcp/diagnostic-wrapper.ts)",
      "Bash(npx tsx scripts/mcp/git-wrapper.ts)"
    ]
  },

  "mcpServers": {
    "diagnostic": {
      "command": "node",
      "args": ["/Users/austinmiles/Documents/code/claude_code/task_planner/scripts/mcp/dist/diagnostic-wrapper.js"]
    },
    "git": {
      "command": "node",
      "args": ["/Users/austinmiles/Documents/code/claude_code/task_planner/scripts/mcp/dist/git-wrapper.js"]
    }
  },

  "hooks": {
    "PreToolUse": [
      {
        "matcher": "Edit",
        "hooks": [
          {
            "type": "command",
            "command": "npm run lint -- --fix ${file}",
            "timeout": 10000
          }
        ]
      }
    ],

    "PostToolUse": [
      {
        "matcher": "Edit",
        "hooks": [
          {
            "type": "command",
            "command": "npm test -- --related ${file}",
            "timeout": 30000
          }
        ]
      }
    ],

    "Stop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "npm run typecheck",
            "timeout": 30000
          }
        ]
      }
    ]
  },

  "defaultModel": "claude-sonnet-4-20250514",
  "maxOutputTokens": 4096
}