name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Generate Prisma Client
      run: npm run prisma:generate
    
    - name: Setup test database
      env:
        DATABASE_URL: "file:./test.db"
      run: npx prisma db push --skip-generate
    
    - name: Run TypeScript type checking
      run: npm run typecheck
    
    - name: Run ESLint
      run: npm run lint -- --quiet
    
    - name: Run tests with coverage
      env:
        DATABASE_URL: "file:./test.db"
      run: npm run test:coverage -- --run
    
    - name: Check coverage files
      if: always()
      run: |
        echo "Coverage directory contents:"
        ls -la coverage/ || echo "No coverage directory found"
        echo ""
        echo "Looking for coverage files in project:"
        find . -name "coverage-*.json" -o -name "lcov.info" 2>/dev/null | head -20
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      if: always()
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
    
    - name: Generate coverage summary
      if: always()
      run: |
        if [ -f coverage/coverage-summary.json ]; then
          echo "## Test Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Metric | Coverage |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|----------|" >> $GITHUB_STEP_SUMMARY
          node -e "
            const coverage = require('./coverage/coverage-summary.json');
            const total = coverage.total;
            console.log(\`| Lines | \${total.lines.pct}% |\`);
            console.log(\`| Statements | \${total.statements.pct}% |\`);
            console.log(\`| Functions | \${total.functions.pct}% |\`);
            console.log(\`| Branches | \${total.branches.pct}% |\`);
          " >> $GITHUB_STEP_SUMMARY
        fi
    
    - name: Build application
      run: npm run build

  e2e:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Generate Prisma Client
      run: npm run prisma:generate
    
    - name: Setup test database
      env:
        DATABASE_URL: "file:./test.db"
      run: npx prisma db push --skip-generate
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Build Electron app for testing
      run: npm run build
    
    - name: Run Playwright E2E tests
      run: npm run test:e2e
      env:
        DATABASE_URL: "file:./test.db"
    
    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 7

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check code formatting
      run: npm run lint -- --quiet